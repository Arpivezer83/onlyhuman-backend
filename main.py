from flask import Flask, request, jsonify
from flask_cors import CORS
import os
from openai import OpenAI
from dotenv import load_dotenv

load_dotenv()

app = Flask(__name__)
CORS(app)

client = OpenAI()  # √öJ KLIENS

@app.route("/chat", methods=["POST"])
def chat():
    try:
        data = request.json
        message = data.get("message", "")
        profile = data.get("profile", {})

        nickname = profile.get("nickname", "Tanul√≥")
        goal = profile.get("goal", "seg√≠teni neki a tanul√°sban")
        level = profile.get("level", "ismeretlen")

        system_prompt = (
            f"Te egy kedves, t√ºrelmes AI tan√°r vagy. "
            f"A tanul√≥ neve: {nickname}, szintje: {level}, c√©lja: {goal}. "
            f"K√©rlek, sz√≥l√≠tsd meg ≈ët a nev√©n (pl. Szia {nickname}!), √©s figyelembe v√©ve a szintj√©t √©s c√©lj√°t, "
            f"magyar√°zd el neki egyszer≈±en, √©rthet≈ëen a k√©rd√©seit."
        )

        completion = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": message},
            ]
        )

        reply = completion.choices[0].message.content
        return jsonify({"reply": reply})

    except Exception as e:
        print("üî• Hiba a /chat endpointon:", e)
        return jsonify({"error": "Hiba t√∂rt√©nt a v√°lasz gener√°l√°sakor."}), 500

if __name__ == "__main__":
    app.run(debug=False)
